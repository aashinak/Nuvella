# Use a smaller base image for the build stage (node:16-alpine)
FROM node:16-alpine AS build

# Set working directory inside the container
WORKDIR /app

# Copy package.json and package-lock.json to install dependencies first
COPY package*.json ./

# Install all dependencies (both regular and dev dependencies)
RUN npm install

# Copy the rest of the application code into the container
COPY . .

# Build the TypeScript code
RUN npm run build

# Use an even smaller base image for the final image (node:16-alpine)
FROM node:16-alpine

# Set working directory in the final container
WORKDIR /app

# Copy only the necessary files (dist folder and production dependencies) from the build stage
COPY --from=build /app/dist ./dist
COPY package*.json ./

# Install only the production dependencies and clean npm cache
RUN npm install --only=production && npm cache clean --force

# Expose the port your app runs on
EXPOSE 9000

# Command to start the server (assuming entry point is in dist/server.js)
CMD ["node", "dist/server.js"] 
